{"version":3,"file":"static/js/797.03e018b6.chunk.js","mappings":"qMAiDA,WAAeA,EAAAA,EAAAA,KALS,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,OAE3B,GACuC,CAACE,MAAAA,EAAAA,IAAxC,EA3Cc,SAAH,GAAyB,IAApBF,EAAM,EAANA,OAAQE,EAAK,EAALA,MAGpB,OAAIF,GAAe,SAAC,KAAQ,CAACG,GAAI,cAE7B,4BACI,mCACA,SAAC,KAAM,CACHC,cAAe,CACXC,MAAO,GACPC,SAAU,GACVC,YAAY,GAChBC,gBAAc,EAEdC,SAAU,SAACC,EAAO,GAAkB,IAAhBC,EAAS,EAATA,UAAgBT,EAAMQ,EAAOL,MAAOK,EAAOJ,SAAUI,EAAOH,WAAYI,EAAU,EAAE,SACvG,SAACC,GAAM,OACJ,UAAC,KAAI,YACD,4BACI,kBAAOC,QAAQ,QAAO,qBACtB,SAAC,KAAK,CAACC,GAAG,QAAQC,KAAK,QAAQC,KAAK,WACpC,SAAC,KAAY,CAACA,KAAK,OAAOC,UAAU,YAExC,4BACI,kBAAOJ,QAAQ,WAAU,wBACzB,SAAC,KAAK,CAACC,GAAG,WAAWC,KAAK,WAAWC,KAAK,iBAE9C,4BACI,SAAC,KAAK,CAACF,GAAG,aAAaC,KAAK,WAAWC,KAAK,gBAC5C,kBAAOH,QAAQ,aAAY,6BAE/B,mBAAQE,KAAK,SAAQ,kBAAc,KAAC,kBACnCH,EAAOA,SACL,MAI3B,G","sources":["components/Login/Login.jsx"],"sourcesContent":["import React from 'react';\nimport {Formik, Form, Field, ErrorMessage} from \"formik\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Navigate} from \"react-router-dom\";\n\nconst Login = ({isAuth, login}) => {\n\n\n    if (isAuth) return <Navigate to={'/Profile'} />\n    return (\n        <div>\n            <h1>Login</h1>\n            <Formik\n                initialValues={{\n                    email: \"\",\n                    password: \"\",\n                    rememberMe: true}}\n                validateOnBlur\n                // validationSchema={validationSchemaName}\n                onSubmit={(values, {setStatus}) => {login(values.email, values.password, values.rememberMe, setStatus)}}>\n                {(status) => (\n                    <Form>\n                        <div>\n                            <label htmlFor=\"email\">Email:</label>\n                            <Field id=\"email\" type=\"email\" name=\"email\"/>\n                            <ErrorMessage name=\"name\" component=\"div\" />\n                        </div>\n                        <div>\n                            <label htmlFor=\"password\">Password:</label>\n                            <Field id=\"password\" type=\"password\" name=\"password\"/>\n                        </div>\n                        <div>\n                            <Field id=\"rememberMe\" type=\"checkbox\" name=\"rememberMe\"/>\n                            <label htmlFor=\"rememberMe\">Remember me</label>\n                        </div>\n                        <button type=\"submit\">Send</button> <br></br>\n                        {status.status}\n                    </Form>\n                )}\n            </Formik>\n        </div>)\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n    }\n}\nexport default connect(mapStateToProps,{login})(Login);"],"names":["connect","state","isAuth","auth","login","to","initialValues","email","password","rememberMe","validateOnBlur","onSubmit","values","setStatus","status","htmlFor","id","type","name","component"],"sourceRoot":""}