{"version":3,"file":"static/js/911.4a2d3c09.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-way-of-samurai/./src/components/Profile/MyPost/MyPosts.module.css?a619","components/Profile/MyPost/Post/Post.jsx","components/Profile/MyPost/MyPostsContainer.jsx","components/Profile/MyPost/MyPosts.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"description\":\"ProfileInfo_description__u7GZ5\"};","import React, {useEffect, useState} from 'react';\nimport s from './ProfileInfo.module.css';\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status]);\n    const activateEditMod = () => {\n        setEditMode(true);\n    }\n    const deactivateEditMod = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n    return (<div>\n        {!editMode && <div>\n            <span onDoubleClick={activateEditMod}>{props.status || '----'}</span>\n        </div>}\n        {editMode && <div>\n            <input onChange={onStatusChange} onBlur={deactivateEditMod} autoFocus={true}\n                   value={status}/>\n        </div>}\n    </div>)\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/preloader/preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nexport default ({profile, status, updateStatus}) => {\n    if (!profile) {\n        return <Preloader/>\n    }\n    return (<div>\n        <div className={s.description}>\n            <img src={profile.photos.large}/>\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n        </div>\n    </div>)\n}","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__l4iSa\",\"post\":\"MyPosts_post__KmdzL\"};","import React  from 'react';\nimport s from './Post.module.css';\n\nexport default (props) => {\n    return (\n        <div>\n            {props.message}\n            <span>{props.likesCount} like</span>\n        </div>\n    );\n}","import React  from 'react';\nimport {addPostActionCreater} from '../../../redux/profile-reducer';\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (postText) => {\n            dispatch(addPostActionCreater(postText));\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (MyPosts);\n","import React  from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\n\nexport default (props) => {\n    let postsElements = [...props.posts]\n        .reverse()\n        .map( post => <Post message={post.message} key={post.id} likesCount={post.likesCount}/>);\n    return (\n        <div className={s.postsBlock}>\n            <h3>My Posts</h3>\n            <div>\n                <Formik\n                    initialValues={{postText: \"\"}}\n                    validateOnBlur\n                    onSubmit={(values) => {props.addPost(values.postText); values.postText = \"\"}}\n                >{() => (\n                    <Form>\n                        <Field name=\"postText\" type=\"text\"/>\n                        <ErrorMessage name='postText' component=\"div\"/>\n                        <button type={'submit'}>Send</button>\n                    </Form>\n                )}\n                </Formik>\n            </div>\n            <div className={s.post}>\n                { postsElements }\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport s from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from \"./MyPost/MyPostsContainer\";\n\nexport default (props) => {\n    return (\n        <>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <MyPostsContainer />\n        </>\n    )\n}","import React from 'react';\nimport s from './Profile.module.css';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {Navigate, useParams} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userID = this.props.match.params.userId;\n        if (!userID) {\n            userID = this.props.authorizedUserId;\n        }\n        this.props.getUserProfile(userID);\n        this.props.getStatus(userID);\n    }\n    render() {\n        if (this.props.isMain && !this.props.isAuth) {\n            return <Navigate to='/login' />\n        } else return (\n            <Profile {...this.props}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n})\nfunction withRouter(Children){\n    return(props)=>{\n        const match  = {params: useParams()};\n        return <Children {...props}  match = {match}/>\n    }\n}\nexport default compose (\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter,\n)(ProfileContainer)\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","profile","className","s","src","photos","large","message","likesCount","connect","state","posts","profilePage","dispatch","addPost","postText","addPostActionCreater","postsElements","reverse","map","post","Post","id","initialValues","validateOnBlur","onSubmit","values","name","type","component","ProfileInfo","MyPostsContainer","ProfileContainer","userID","this","match","params","userId","authorizedUserId","getUserProfile","getStatus","isMain","isAuth","to","Profile","React","compose","auth","Children","useParams"],"sourceRoot":""}